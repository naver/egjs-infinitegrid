"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7389],{17494:(e,t,a)=>{a.r(t),a.d(t,{default:()=>i});var s=a(67294),l=a(63095),c=a(30756);const i=()=>s.createElement("div",{className:"columns"},s.createElement("div",{className:"column"},s.createElement("div",{className:"box"},s.createElement("div",{className:"block is-flex is-flex-direction-row is-align-items-center"},s.createElement("figure",{className:"image is-32x32 mx-5"},s.createElement("img",{src:"img/icons/typescript.svg"})),s.createElement("span",{className:"subtitle has-text-black"},"Typescript")),s.createElement("div",{className:"block"},s.createElement("p",null,"InfiniteGrid is fully written in ",s.createElement("a",{href:"https://www.typescriptlang.org/",target:"_blank"},"Typescript"),", and every classes, properties, and events are correctly typed and exported."))),s.createElement("div",{className:"box"},s.createElement("div",{className:"block is-flex is-flex-direction-row is-align-items-center"},s.createElement("figure",{className:"image is-32x32 mx-5"},s.createElement("img",{src:"img/icons/infinity.svg"})),s.createElement("span",{className:"subtitle has-text-black"},"Insert Infinite Items")),s.createElement("div",{className:"block"},"Numerous items can be added by scrolling. Also, performance can be improved by showing only the DOM of the visible area."))),s.createElement("div",{className:"column"},s.createElement("div",{className:"box"},s.createElement("div",{className:"block is-flex is-flex-direction-row is-align-items-center"},s.createElement("figure",{className:"image is-32x32 mx-5"},s.createElement("img",{src:"img/icons/books.svg"})),s.createElement("span",{className:"subtitle has-text-black"},"Rich API")),s.createElement("div",{className:"block"},s.createElement("p",null,"InfiniteGrid comes with a rich API. You can use it to create your own customized InfiniteGrid & Plugins."),s.createElement("p",null,"Check our ",s.createElement(l.Z,{to:(0,c.Z)("docs/api/InfiniteGrid")},"API Docs")))),s.createElement("div",{className:"box"},s.createElement("div",{className:"block is-flex is-flex-direction-row is-align-items-center"},s.createElement("figure",{className:"image is-32x32 mx-5"},s.createElement("img",{src:"img/icons/loading.svg"})),s.createElement("span",{className:"subtitle has-text-black"},"Wait Data Loading")),s.createElement("div",{className:"block"},s.createElement("p",null,"All operations operate asynchronously, data can be added asynchronously, and are rendered sequentially.")))),s.createElement("div",{className:"column"},s.createElement("div",{className:"box"},s.createElement("div",{className:"block is-flex is-flex-direction-row is-align-items-center"},s.createElement("figure",{className:"image is-32x32 mx-5"},s.createElement("img",{src:"img/icons/internetexplorer.svg"})),s.createElement("span",{className:"subtitle has-text-black"},"Supports IE9+ (With polyfills)")),s.createElement("div",null,s.createElement("p",null,"InfiniteGrid can support Internet Explorer 9+"),s.createElement("p",null,"\u26a0\ufe0f IE 11+ for Angular & Svelte"))),s.createElement("div",{className:"box"},s.createElement("div",{className:"block is-flex is-flex-direction-row is-align-items-center"},s.createElement("figure",{className:"image is-32x32 mx-5"},s.createElement("img",{src:"img/icons/placeholder.svg"})),s.createElement("span",{className:"subtitle has-text-black"},"Placeholder")),s.createElement("div",{className:"block"},s.createElement("p",null,"You can add placeholders that can be displayed instead while waiting for data or restoring status.")))))}}]);