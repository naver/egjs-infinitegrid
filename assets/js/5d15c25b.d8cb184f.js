"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3956],{40663:i=>{i.exports=JSON.parse('{"pluginId":"default","version":"4.1.1","label":"4.1.1","banner":"unmaintained","badge":true,"noIndex":false,"className":"docs-version-4.1.1","isLast":false,"docsSidebars":{"version-4.1.1/started":[{"type":"link","label":"Installation","href":"/egjs-infinitegrid/docs/4.1.1/","docId":"installation"},{"type":"link","label":"Quick Start","href":"/egjs-infinitegrid/docs/4.1.1/quick-start","docId":"quick-start"},{"type":"link","label":"Using the Methods","href":"/egjs-infinitegrid/docs/4.1.1/using-the-methods","docId":"using-the-methods"},{"type":"link","label":"Listening to Events","href":"/egjs-infinitegrid/docs/4.1.1/listening-to-events","docId":"listening-to-events"},{"type":"link","label":"Migration Guide from v3 to v4","href":"/egjs-infinitegrid/docs/4.1.1/migration-from-v3","docId":"migration-from-v3"}],"version-4.1.1/api":[{"type":"category","label":"Class","items":[{"type":"link","label":"InfiniteGrid","href":"/egjs-infinitegrid/docs/4.1.1/api/InfiniteGrid","docId":"api/InfiniteGrid"},{"type":"link","label":"FrameInfiniteGrid","href":"/egjs-infinitegrid/docs/4.1.1/api/FrameInfiniteGrid","docId":"api/FrameInfiniteGrid"},{"type":"link","label":"JustifiedInfiniteGrid","href":"/egjs-infinitegrid/docs/4.1.1/api/JustifiedInfiniteGrid","docId":"api/JustifiedInfiniteGrid"},{"type":"link","label":"MasonryInfiniteGrid","href":"/egjs-infinitegrid/docs/4.1.1/api/MasonryInfiniteGrid","docId":"api/MasonryInfiniteGrid"},{"type":"link","label":"PackingInfiniteGrid","href":"/egjs-infinitegrid/docs/4.1.1/api/PackingInfiniteGrid","docId":"api/PackingInfiniteGrid"},{"type":"link","label":"Grid","href":"/egjs-infinitegrid/docs/4.1.1/api/Grid","docId":"api/Grid"},{"type":"link","label":"Component","href":"/egjs-infinitegrid/docs/4.1.1/api/Component","docId":"api/Component"}],"collapsible":true,"collapsed":true},{"type":"category","label":"Constant","items":[{"type":"link","label":"withInfiniteGridMethods","href":"/egjs-infinitegrid/docs/4.1.1/api/withInfiniteGridMethods","docId":"api/withInfiniteGridMethods"}],"collapsible":true,"collapsed":true},{"type":"category","label":"Typedef","items":[{"type":"link","label":"FrameInfiniteGridOptions","href":"/egjs-infinitegrid/docs/4.1.1/api/FrameInfiniteGridOptions","docId":"api/FrameInfiniteGridOptions"},{"type":"link","label":"JustifiedInfiniteGridOptions","href":"/egjs-infinitegrid/docs/4.1.1/api/JustifiedInfiniteGridOptions","docId":"api/JustifiedInfiniteGridOptions"},{"type":"link","label":"MasonryInfiniteGridOptions","href":"/egjs-infinitegrid/docs/4.1.1/api/MasonryInfiniteGridOptions","docId":"api/MasonryInfiniteGridOptions"},{"type":"link","label":"PackingInfiniteGridOptions","href":"/egjs-infinitegrid/docs/4.1.1/api/PackingInfiniteGridOptions","docId":"api/PackingInfiniteGridOptions"},{"type":"link","label":"InfiniteGridStatus","href":"/egjs-infinitegrid/docs/4.1.1/api/InfiniteGridStatus","docId":"api/InfiniteGridStatus"},{"type":"link","label":"InfiniteGridItemInfo","href":"/egjs-infinitegrid/docs/4.1.1/api/InfiniteGridItemInfo","docId":"api/InfiniteGridItemInfo"},{"type":"link","label":"InfiniteGridOptions","href":"/egjs-infinitegrid/docs/4.1.1/api/InfiniteGridOptions","docId":"api/InfiniteGridOptions"},{"type":"link","label":"InsertedPlaceholdersResult","href":"/egjs-infinitegrid/docs/4.1.1/api/InsertedPlaceholdersResult","docId":"api/InsertedPlaceholdersResult"},{"type":"link","label":"OnRequestAppend","href":"/egjs-infinitegrid/docs/4.1.1/api/OnRequestAppend","docId":"api/OnRequestAppend"},{"type":"link","label":"OnRequestPrepend","href":"/egjs-infinitegrid/docs/4.1.1/api/OnRequestPrepend","docId":"api/OnRequestPrepend"},{"type":"link","label":"OnRenderComplete","href":"/egjs-infinitegrid/docs/4.1.1/api/OnRenderComplete","docId":"api/OnRenderComplete"},{"type":"link","label":"OnContentError","href":"/egjs-infinitegrid/docs/4.1.1/api/OnContentError","docId":"api/OnContentError"},{"type":"link","label":"OnChangeScroll","href":"/egjs-infinitegrid/docs/4.1.1/api/OnChangeScroll","docId":"api/OnChangeScroll"}],"collapsible":true,"collapsed":true}]},"docs":{"api/Component":{"id":"api/Component","title":"Component","description":"A class used to manage events in a component","sidebar":"version-4.1.1/api"},"api/FrameInfiniteGrid":{"id":"api/FrameInfiniteGrid","title":"FrameInfiniteGrid","description":"\'Frame\' is a printing term with the meaning that \'it fits in one row wide\'. FrameInfiniteGrid is a grid that the item is filled up on the basis of a line given a size.","sidebar":"version-4.1.1/api"},"api/FrameInfiniteGridOptions":{"id":"api/FrameInfiniteGridOptions","title":"FrameInfiniteGridOptions","description":"FrameInfiniteGridOptions","sidebar":"version-4.1.1/api"},"api/Grid":{"id":"api/Grid","title":"Grid","description":"PropertiesMethodsEvents","sidebar":"version-4.1.1/api"},"api/InfiniteGrid":{"id":"api/InfiniteGrid","title":"InfiniteGrid","description":"A module used to arrange items including content infinitely according to layout type. With this module, you can implement various layouts composed of different items whose sizes vary. It guarantees performance by maintaining the number of DOMs the module is handling under any circumstance","sidebar":"version-4.1.1/api"},"api/InfiniteGridItemInfo":{"id":"api/InfiniteGridItemInfo","title":"InfiniteGridItemInfo","description":"InfiniteGridItemInfo","sidebar":"version-4.1.1/api"},"api/InfiniteGridOptions":{"id":"api/InfiniteGridOptions","title":"InfiniteGridOptions","description":"InfiniteGridOptions","sidebar":"version-4.1.1/api"},"api/InfiniteGridStatus":{"id":"api/InfiniteGridStatus","title":"InfiniteGridStatus","description":"InfiniteGridStatus","sidebar":"version-4.1.1/api"},"api/InsertedPlaceholdersResult":{"id":"api/InsertedPlaceholdersResult","title":"InsertedPlaceholdersResult","description":"InsertedPlaceholdersResult","sidebar":"version-4.1.1/api"},"api/JustifiedInfiniteGrid":{"id":"api/JustifiedInfiniteGrid","title":"JustifiedInfiniteGrid","description":"\'justified\' is a printing term with the meaning that \'it fits in one row wide\'. JustifiedInfiniteGrid is a grid that the item is filled up on the basis of a line given a size.If \'data-grid-inline-offset\' or \'data-grid-content-offset\' are set for item element, the ratio is maintained except for the offset value.If \'data-grid-maintained-target\' is set for an element whose ratio is to be maintained, the item is rendered while maintaining the ratio of the element.","sidebar":"version-4.1.1/api"},"api/JustifiedInfiniteGridOptions":{"id":"api/JustifiedInfiniteGridOptions","title":"JustifiedInfiniteGridOptions","description":"JustifiedInfiniteGridOptions","sidebar":"version-4.1.1/api"},"api/MasonryInfiniteGrid":{"id":"api/MasonryInfiniteGrid","title":"MasonryInfiniteGrid","description":"MasonryInfiniteGrid is a grid that stacks items with the same width as a stack of bricks. Adjust the width of all images to the same size, find the lowest height column, and insert a new item.","sidebar":"version-4.1.1/api"},"api/MasonryInfiniteGridOptions":{"id":"api/MasonryInfiniteGridOptions","title":"MasonryInfiniteGridOptions","description":"MasonryInfiniteGridOptions","sidebar":"version-4.1.1/api"},"api/OnChangeScroll":{"id":"api/OnChangeScroll","title":"OnChangeScroll","description":"OnChangeScroll","sidebar":"version-4.1.1/api"},"api/OnContentError":{"id":"api/OnContentError","title":"OnContentError","description":"OnContentError","sidebar":"version-4.1.1/api"},"api/OnRenderComplete":{"id":"api/OnRenderComplete","title":"OnRenderComplete","description":"OnRenderComplete","sidebar":"version-4.1.1/api"},"api/OnRequestAppend":{"id":"api/OnRequestAppend","title":"OnRequestAppend","description":"OnRequestAppend","sidebar":"version-4.1.1/api"},"api/OnRequestPrepend":{"id":"api/OnRequestPrepend","title":"OnRequestPrepend","description":"OnRequestPrepend","sidebar":"version-4.1.1/api"},"api/PackingInfiniteGrid":{"id":"api/PackingInfiniteGrid","title":"PackingInfiniteGrid","description":"The PackingInfiniteGrid is a grid that shows the important items bigger without sacrificing the weight of the items.Rows and columns are separated so that items are dynamically placed within the horizontal and vertical space rather than arranged in an orderly fashion.If sizeWeight is higher than ratioWeight, the size of items is preserved as much as possible.Conversely, if ratioWeight is higher than sizeWeight, the ratio of items is preserved as much as possible.","sidebar":"version-4.1.1/api"},"api/PackingInfiniteGridOptions":{"id":"api/PackingInfiniteGridOptions","title":"PackingInfiniteGridOptions","description":"PackingInfiniteGridOptions","sidebar":"version-4.1.1/api"},"api/withInfiniteGridMethods":{"id":"api/withInfiniteGridMethods","title":"withInfiniteGridMethods","description":"withInfiniteGridMethods","sidebar":"version-4.1.1/api"},"installation":{"id":"installation","title":"Installation","description":"Using the package managers (recommended)","sidebar":"version-4.1.1/started"},"listening-to-events":{"id":"listening-to-events","title":"Listening to Events","description":"<Tabs","sidebar":"version-4.1.1/started"},"migration-from-v3":{"id":"migration-from-v3","title":"Migration Guide from v3 to v4","description":"Changed Usage","sidebar":"version-4.1.1/started"},"quick-start":{"id":"quick-start","title":"Quick Start","description":"If you don\'t want to use Infinite\'s features, use @egjs/grid.","sidebar":"version-4.1.1/started"},"using-the-methods":{"id":"using-the-methods","title":"Using the Methods","description":"<Tabs","sidebar":"version-4.1.1/started"}}}')}}]);