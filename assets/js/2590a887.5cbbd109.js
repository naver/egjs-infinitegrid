"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8287],{25287:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>g,toc:()=>y});var r=n(89575),a=(n(96540),n(15680));const i={custom_edit_url:null},l=void 0,g={unversionedId:"api/InfiniteGridOptions",id:"version-4.12.0/api/InfiniteGridOptions",title:"InfiniteGridOptions",description:"Type: TSInterface",source:"@site/versioned_docs/version-4.12.0/api/InfiniteGridOptions.mdx",sourceDirName:"api",slug:"/api/InfiniteGridOptions",permalink:"/egjs-infinitegrid/docs/api/InfiniteGridOptions",draft:!1,editUrl:null,tags:[],version:"4.12.0",frontMatter:{custom_edit_url:null},sidebar:"api",previous:{title:"InfiniteGridItemInfo",permalink:"/egjs-infinitegrid/docs/api/InfiniteGridItemInfo"},next:{title:"InsertedPlaceholdersResult",permalink:"/egjs-infinitegrid/docs/api/InsertedPlaceholdersResult"}},o={},y=[],p={toc:y},c="wrapper";function d(e){let{components:t,...n}=e;return(0,a.yg)(c,(0,r.A)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("div",null),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Type"),": TSInterface"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:"center"},"PROPERTY"),(0,a.yg)("th",{parentName:"tr",align:"center"},"TYPE"),(0,a.yg)("th",{parentName:"tr",align:"center"},"DEFAULT"),(0,a.yg)("th",{parentName:"tr",align:"center"},"DESCRIPTION"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:"center"},"horizontal"),(0,a.yg)("td",{parentName:"tr",align:"center"},"boolean"),(0,a.yg)("td",{parentName:"tr",align:"center"},"false"),(0,a.yg)("td",{parentName:"tr",align:"center"},(0,a.yg)("p",null,"Direction of the scroll movement. (true: horizontal, false: vertical) If horizontal is false, ",(0,a.yg)("code",null,"inlinePos")," is left, ",(0,a.yg)("code",null,"inlineSize")," is width, ",(0,a.yg)("code",null,"contentPos")," is top, and ",(0,a.yg)("code",null,"contentSize")," is height. If horizontal is true, ",(0,a.yg)("code",null,"inlinePos")," is top, ",(0,a.yg)("code",null,"inlineSize")," is height, ",(0,a.yg)("code",null,"contentPos")," is left, and ",(0,a.yg)("code",null,"contentSize")," is width.",(0,a.yg)("br",null)))),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:"center"},"percentage"),(0,a.yg)("td",{parentName:"tr",align:"center"},"Array","<",'"position" ',"|",' "size"',">"," ","|"," boolean"),(0,a.yg)("td",{parentName:"tr",align:"center"},"false"),(0,a.yg)("td",{parentName:"tr",align:"center"},(0,a.yg)("p",null,"Whether to set the css size and position of the item to %.",(0,a.yg)("br",null)))),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:"center"},"isEqualSize"),(0,a.yg)("td",{parentName:"tr",align:"center"},"boolean"),(0,a.yg)("td",{parentName:"tr",align:"center"},"false"),(0,a.yg)("td",{parentName:"tr",align:"center"},(0,a.yg)("p",null,"Indicates whether sizes of all card elements are equal to one another. If sizes of card elements to be arranged are all equal and this option is set to ",'"',"true",'"',", the performance of layout arrangement can be improved.",(0,a.yg)("br",null)))),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:"center"},"isConstantSize"),(0,a.yg)("td",{parentName:"tr",align:"center"},"boolean"),(0,a.yg)("td",{parentName:"tr",align:"center"},"false"),(0,a.yg)("td",{parentName:"tr",align:"center"},(0,a.yg)("p",null,"Indicates whether sizes of all card elements does not change, the performance of layout arrangement can be improved.",(0,a.yg)("br",null)))),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:"center"},"gap"),(0,a.yg)("td",{parentName:"tr",align:"center"},"number ","|"," {horizontal?: number, vertical?: number}"),(0,a.yg)("td",{parentName:"tr",align:"center"},"5"),(0,a.yg)("td",{parentName:"tr",align:"center"},(0,a.yg)("p",null,"Gap used to create space around items.",(0,a.yg)("br",null)))),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:"center"},"attributePrefix"),(0,a.yg)("td",{parentName:"tr",align:"center"},"string"),(0,a.yg)("td",{parentName:"tr",align:"center"},'"data-grid-"'),(0,a.yg)("td",{parentName:"tr",align:"center"},(0,a.yg)("p",null,"The prefix to use element's data attribute.",(0,a.yg)("br",null)))),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:"center"},"resizeDebounce"),(0,a.yg)("td",{parentName:"tr",align:"center"},"number"),(0,a.yg)("td",{parentName:"tr",align:"center"},"100"),(0,a.yg)("td",{parentName:"tr",align:"center"},(0,a.yg)("p",null,"Debounce time to set in the resize event. (unit: ms)",(0,a.yg)("br",null)))),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:"center"},"maxResizeDebounce"),(0,a.yg)("td",{parentName:"tr",align:"center"},"number"),(0,a.yg)("td",{parentName:"tr",align:"center"},"0"),(0,a.yg)("td",{parentName:"tr",align:"center"},(0,a.yg)("p",null,"Maximum time to debounce the resize event. (0 is not set)",(0,a.yg)("br",null)))),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:"center"},"autoResize"),(0,a.yg)("td",{parentName:"tr",align:"center"},"boolean"),(0,a.yg)("td",{parentName:"tr",align:"center"},"true"),(0,a.yg)("td",{parentName:"tr",align:"center"},(0,a.yg)("p",null,"Whether the resize method should be called automatically after a window resize event.",(0,a.yg)("br",null)))),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:"center"},"useFit"),(0,a.yg)("td",{parentName:"tr",align:"center"},"boolean"),(0,a.yg)("td",{parentName:"tr",align:"center"},"true"),(0,a.yg)("td",{parentName:"tr",align:"center"},(0,a.yg)("p",null,"Whether to move the outline to 0 when the top is empty when rendering. However, if it overflows above the top, the outline is forced to 0.",(0,a.yg)("br",null)))),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:"center"},"useTransform"),(0,a.yg)("td",{parentName:"tr",align:"center"},"boolean"),(0,a.yg)("td",{parentName:"tr",align:"center"},"false"),(0,a.yg)("td",{parentName:"tr",align:"center"},(0,a.yg)("p",null,"Whether to use transform property instead of using left and top css properties.",(0,a.yg)("br",null)))),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:"center"},"renderOnPropertyChange"),(0,a.yg)("td",{parentName:"tr",align:"center"},"boolean"),(0,a.yg)("td",{parentName:"tr",align:"center"},"true"),(0,a.yg)("td",{parentName:"tr",align:"center"},(0,a.yg)("p",null,"Whether to automatically render through property change.",(0,a.yg)("br",null)))),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:"center"},"preserveUIOnDestroy"),(0,a.yg)("td",{parentName:"tr",align:"center"},"boolean"),(0,a.yg)("td",{parentName:"tr",align:"center"},"false"),(0,a.yg)("td",{parentName:"tr",align:"center"},(0,a.yg)("p",null,"Whether to preserve the UI of the existing container or item when destroying.",(0,a.yg)("br",null)))),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:"center"},"defaultDirection"),(0,a.yg)("td",{parentName:"tr",align:"center"},'"start" ',"|",' "end"'),(0,a.yg)("td",{parentName:"tr",align:"center"},'"end"'),(0,a.yg)("td",{parentName:"tr",align:"center"},(0,a.yg)("p",null,"The default direction value when direction is not set in the render option.",(0,a.yg)("br",null)))),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:"center"},"outlineLength"),(0,a.yg)("td",{parentName:"tr",align:"center"},"number"),(0,a.yg)("td",{parentName:"tr",align:"center"},"0"),(0,a.yg)("td",{parentName:"tr",align:"center"},(0,a.yg)("p",null,"The number of outlines. If the number of outlines is 0, it is calculated according to the type of grid.",(0,a.yg)("br",null)))),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:"center"},"outlineSize"),(0,a.yg)("td",{parentName:"tr",align:"center"},"number"),(0,a.yg)("td",{parentName:"tr",align:"center"},"0"),(0,a.yg)("td",{parentName:"tr",align:"center"},(0,a.yg)("p",null,"The size of the outline. If the outline size is 0, it is calculated according to the grid type.",(0,a.yg)("br",null)))),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:"center"},"useRoundedSize"),(0,a.yg)("td",{parentName:"tr",align:"center"},"boolean"),(0,a.yg)("td",{parentName:"tr",align:"center"},"true"),(0,a.yg)("td",{parentName:"tr",align:"center"},(0,a.yg)("p",null,"Whether to get the size as rounded size(offsetWidth, offsetHeight). Set to true if transform is applied to the container. If false, get the size through getBoundingClientRect.",(0,a.yg)("br",null)))),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:"center"},"useResizeObserver"),(0,a.yg)("td",{parentName:"tr",align:"center"},"boolean"),(0,a.yg)("td",{parentName:"tr",align:"center"},"false"),(0,a.yg)("td",{parentName:"tr",align:"center"},(0,a.yg)("p",null,"Whether to use ResizeObserver event to detect container size change when ",(0,a.yg)("code",null,"autoResize")," option is used.",(0,a.yg)("br",null)))),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:"center"},"observeChildren"),(0,a.yg)("td",{parentName:"tr",align:"center"},"boolean"),(0,a.yg)("td",{parentName:"tr",align:"center"},"false"),(0,a.yg)("td",{parentName:"tr",align:"center"},(0,a.yg)("p",null,"Whether to detect size change of children if useResizeObserver option is used.",(0,a.yg)("br",null)))),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:"center"},"externalItemRenderer"),(0,a.yg)("td",{parentName:"tr",align:"center"},"ItemRenderer ","|"," null"),(0,a.yg)("td",{parentName:"tr",align:"center"}),(0,a.yg)("td",{parentName:"tr",align:"center"},(0,a.yg)("p",null,"You can set the ItemRenderer directly externally.",(0,a.yg)("br",null)))),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:"center"},"externalContainerManager"),(0,a.yg)("td",{parentName:"tr",align:"center"},"ContainerManager ","|"," null"),(0,a.yg)("td",{parentName:"tr",align:"center"}),(0,a.yg)("td",{parentName:"tr",align:"center"},(0,a.yg)("p",null,"You can set the ContainerManager directly externally.",(0,a.yg)("br",null)))),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:"center"},"container"),(0,a.yg)("td",{parentName:"tr",align:"center"},"boolean ","|"," HTMLElement ","|"," string ","|"," Ref","<","HTMLElement",">"),(0,a.yg)("td",{parentName:"tr",align:"center"},"false"),(0,a.yg)("td",{parentName:"tr",align:"center"},(0,a.yg)("p",null,"The target to which the container is applied. If false, create itself, if true, create container. A string or HTMLElement specifies the target directly."))),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:"center"},"containerTag"),(0,a.yg)("td",{parentName:"tr",align:"center"},"string"),(0,a.yg)("td",{parentName:"tr",align:"center"},'"div"'),(0,a.yg)("td",{parentName:"tr",align:"center"},(0,a.yg)("p",null,"If you create a container, you can set the container's tag."))),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:"center"},"threshold"),(0,a.yg)("td",{parentName:"tr",align:"center"},"number"),(0,a.yg)("td",{parentName:"tr",align:"center"},"100"),(0,a.yg)("td",{parentName:"tr",align:"center"},(0,a.yg)("p",null,"The size of the scrollable area for adding the next group of items."))),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:"center"},"useRecycle"),(0,a.yg)("td",{parentName:"tr",align:"center"},"boolean"),(0,a.yg)("td",{parentName:"tr",align:"center"},"true"),(0,a.yg)("td",{parentName:"tr",align:"center"},(0,a.yg)("p",null,"Whether to show only the DOM of the visible area."))),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:"center"},"scrollContainer"),(0,a.yg)("td",{parentName:"tr",align:"center"},"HTMLElement ","|"," string ","|"," Ref","<","HTMLElement",">"," ","|"," null"),(0,a.yg)("td",{parentName:"tr",align:"center"}),(0,a.yg)("td",{parentName:"tr",align:"center"},(0,a.yg)("p",null,"You can set the scrollContainer directly. In this case, the container becomes the wrapper itself."))),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:"center"},"gridConstructor"),(0,a.yg)("td",{parentName:"tr",align:"center"},"GridFunction"),(0,a.yg)("td",{parentName:"tr",align:"center"}),(0,a.yg)("td",{parentName:"tr",align:"center"},(0,a.yg)("p",null,"Grid class to apply Infinite function."))),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:"center"},"appliedItemChecker"),(0,a.yg)("td",{parentName:"tr",align:"center"},"(item: InfiniteGridItem, grid: Grid) =",">"," boolean"),(0,a.yg)("td",{parentName:"tr",align:"center"}),(0,a.yg)("td",{parentName:"tr",align:"center"},(0,a.yg)("p",null,"A function that checks whether non-rendering items are included in the Grid."))),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:"center"},"renderer"),(0,a.yg)("td",{parentName:"tr",align:"center"},"Renderer ","|"," null"),(0,a.yg)("td",{parentName:"tr",align:"center"}),(0,a.yg)("td",{parentName:"tr",align:"center"},(0,a.yg)("p",null,"class that renders the DOM."))))))}d.isMDXComponent=!0},15680:(e,t,n)=>{n.d(t,{xA:()=>p,yg:()=>s});var r=n(96540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function g(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=r.createContext({}),y=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=y(e.components);return r.createElement(o.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,p=g(e,["components","mdxType","originalType","parentName"]),c=y(n),m=a,s=c["".concat(o,".").concat(m)]||c[m]||d[m]||i;return n?r.createElement(s,l(l({ref:t},p),{},{components:n})):r.createElement(s,l({ref:t},p))}));function s(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=m;var g={};for(var o in t)hasOwnProperty.call(t,o)&&(g[o]=t[o]);g.originalType=e,g[c]="string"==typeof e?e:a,l[1]=g;for(var y=2;y<i;y++)l[y]=n[y];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);